package com.wiseman.hostelworldassessmentapp.data.model


import com.squareup.moshi.Json
import kotlinx.serialization.Serializable

@Serializable
data class PropertyDto(
    @Json(name = "address1")
    val address1: String?,
    @Json(name = "address2")
    val address2: String?,
    @Json(name = "distance")
    val distance: DistanceDto?,
    @Json(name = "district")
    val district: DistrictDto?,
    @Json(name = "districts")
    val districts: List<DistrictX>?,
    @Json(name = "fabSort")
    val fabSort: FabSortDto?,
    @Json(name = "facilities")
    val facilities: List<FacilityDto>?,
    @Json(name = "fenceDiscount")
    val fenceDiscount: Int?,
    @Json(name = "freeCancellation")
    val freeCancellation: FreeCancellationDto?,
    @Json(name = "freeCancellationAvailable")
    val freeCancellationAvailable: Boolean?,
    @Json(name = "freeCancellationAvailableUntil")
    val freeCancellationAvailableUntil: String?,
    @Json(name = "hbid")
    val hbid: Int?,
    @Json(name = "hostelworldRecommends")
    val hostelworldRecommends: Boolean?,
    @Json(name = "hwExtra")
    val hwExtra: String?,
    @Json(name = "id")
    val id: Int?,
    @Json(name = "images")
    val imageDtos: List<ImageDto>?,
    @Json(name = "imagesGallery")
    val imagesGallery: List<ImagesGalleryDto>?,
    @Json(name = "isElevate")
    val isElevate: Boolean?,
    @Json(name = "isFeatured")
    val isFeatured: Boolean?,
    @Json(name = "isNew")
    val isNew: Boolean?,
    @Json(name = "isPromoted")
    val isPromoted: Boolean?,
    @Json(name = "latitude")
    val latitude: Double?,
    @Json(name = "longitude")
    val longitude: Double?,
    @Json(name = "lowestAverageDormPricePerNight")
    val lowestAverageDormPricePerNightDto: LowestAverageDormPricePerNightDto?,
    @Json(name = "lowestAveragePricePerNight")
    val lowestAveragePricePerNightDto: LowestAveragePricePerNightDto?,
    @Json(name = "lowestAveragePrivatePricePerNight")
    val lowestAveragePrivatePricePerNight: LowestAveragePrivatePricePerNightDto?,
    @Json(name = "lowestDormPricePerNight")
    val lowestDormPricePerNightDto: LowestDormPricePerNightDto?,
    @Json(name = "lowestPricePerNight")
    val lowestPricePerNight: LowestPricePerNightDto?,
    @Json(name = "lowestPrivatePricePerNight")
    val lowestPrivatePricePerNight: LowestPrivatePricePerNightDto?,
    @Json(name = "name")
    val name: String?,
    @Json(name = "originalLowestAverageDormPricePerNight")
    val originalLowestAverageDormPricePerNightDto: OriginalLowestAverageDormPricePerNightDto?,
    @Json(name = "originalLowestAveragePricePerNight")
    val originalLowestAveragePricePerNightDto: OriginalLowestAveragePricePerNightDto?,
    @Json(name = "originalLowestAveragePrivatePricePerNight")
    val originalLowestAveragePrivatePricePerNightDto: OriginalLowestAveragePrivatePricePerNightDto?,
    @Json(name = "overallRating")
    val overallRating: OverallRatingDto?,
    @Json(name = "overview")
    val overview: String?,
    @Json(name = "position")
    val position: Int?,
    @Json(name = "promotions")
    val promotions: List<Promotion>?,
    @Json(name = "rateRuleViolations")
    val rateRuleViolations: List<RateRuleViolationDto>?,
    @Json(name = "ratingBreakdown")
    val ratingBreakdown: RatingBreakdownDto?,
    @Json(name = "starRating")
    val starRating: Int?,
    @Json(name = "stayRuleViolations")
    val stayRuleViolations: List<StayRuleViolationDto>?,
    @Json(name = "type")
    val type: String?,
    @Json(name = "veryPopular")
    val veryPopular: Boolean?
)